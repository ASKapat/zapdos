diff --git a/src/kernels/IonBolosKernelEnergyForm.C b/src/kernels/IonBolosKernelEnergyForm.C
index db4913a..7861a36 100644
--- a/src/kernels/IonBolosKernelEnergyForm.C
+++ b/src/kernels/IonBolosKernelEnergyForm.C
@@ -8,8 +8,8 @@ InputParameters validParams<IonBolosKernelEnergyForm>()
   params.addRequiredCoupledVar("potential", "The electric potential");
   params.addRequiredCoupledVar("em", "The electron density");
   params.addRequiredCoupledVar("mean_en", "The electront temperature");
-  params.addRequiredParam<bool>("townsend","Whether to use the townsend formulation for the ionization term.");
-  params.addRequiredParam<bool>("use_interp_for_townsend","Whether to use interpolated data as opposed to a model functional fit for the townsend coeffient.");
+  // params.addRequiredParam<bool>("townsend","Whether to use the townsend formulation for the ionization term.");
+  // params.addRequiredParam<bool>("use_interp_for_townsend","Whether to use interpolated data as opposed to a model functional fit for the townsend coeffient.");
   // params.addRequiredParam<bool>("estim_jac_with_function","If using interpolation for townsend, whether to use inexact function to estimate Jacobian.");
   return params;
 }
@@ -38,6 +38,8 @@ IonBolosKernelEnergyForm::IonBolosKernelEnergyForm(const InputParameters & param
   _N_A(getMaterialProperty<Real>("N_A")),
   _alpha_iz(getMaterialProperty<Real>("alpha_iz")),
   _d_iz_d_actual_mean_en(getMaterialProperty<Real>("d_iz_d_actual_mean_en")),
+  _d_muem_d_actual_mean_en(getMaterialProperty<Real>("d_muem_d_actual_mean_en")),
+  _d_diffem_d_actual_mean_en(getMaterialProperty<Real>("d_diffem_d_actual_mean_en"))
 
   // Kernel members
 
@@ -45,29 +47,29 @@ IonBolosKernelEnergyForm::IonBolosKernelEnergyForm(const InputParameters & param
   // _Pe(0.0),
   // _vd_mag(0.0),
   // _delta(0.0),
-  _townsend(getParam<bool>("townsend")),
-  _use_interp_for_townsend(getParam<bool>("use_interp_for_townsend")),
-  // _estim_jac_with_function(getParam<bool>("estim_jac_with_function")),
-  _actual_mean_en(0.0),
-  _iz(0.0),
-  _d_iz_d_actual_mean_en_member(0.0),
-  _d_actual_mean_en_d_em(0.0),
-  _d_actual_mean_en_d_mean_en(0.0),
-  _d_iz_d_em(0.0),
-  _d_iz_d_mean_en(0.0),
-  _electron_flux(0.0,0.0,0.0),
-  _d_electron_flux_d_potential(0.0,0.0,0.0),
-  _d_electron_flux_d_em(0.0,0.0,0.0),
-  _electron_flux_mag(0.0),
-  _d_electron_flux_mag_d_potential(0.0),
-  _d_electron_flux_mag_d_em(0.0),
-  _source_term(0.0),
-  _d_source_term_d_em(0.0),
-  _d_source_term_d_mean_en(0.0),
-  _d_source_term_d_potential(0.0)
+  // _townsend(getParam<bool>("townsend")),
+  // _use_interp_for_townsend(getParam<bool>("use_interp_for_townsend")),
+  // // _estim_jac_with_function(getParam<bool>("estim_jac_with_function")),
+  // _actual_mean_en(0.0),
+  // _iz(0.0),
+  // _d_iz_d_actual_mean_en_member(0.0),
+  // _d_actual_mean_en_d_em(0.0),
+  // _d_actual_mean_en_d_mean_en(0.0),
+  // _d_iz_d_em(0.0),
+  // _d_iz_d_mean_en(0.0),
+  // _electron_flux(0.0,0.0,0.0),
+  // _d_electron_flux_d_potential(0.0,0.0,0.0),
+  // _d_electron_flux_d_em(0.0,0.0,0.0),
+  // _electron_flux_mag(0.0),
+  // _d_electron_flux_mag_d_potential(0.0),
+  // _d_electron_flux_mag_d_em(0.0),
+  // _source_term(0.0),
+  // _d_source_term_d_em(0.0),
+  // _d_source_term_d_mean_en(0.0),
+  // _d_source_term_d_potential(0.0)
 {
-  if ( !_townsend && _use_interp_for_townsend )
-    std::cerr << "Not a consistent specification of the ionization problem." << std::endl;
+  // if ( !_townsend && _use_interp_for_townsend )
+  //   std::cerr << "Not a consistent specification of the ionization problem." << std::endl;
 }
 
 IonBolosKernelEnergyForm::~IonBolosKernelEnergyForm()
@@ -76,26 +78,11 @@ IonBolosKernelEnergyForm::~IonBolosKernelEnergyForm()
 Real
 IonBolosKernelEnergyForm::computeQpResidual()
 {
-  // _vd_mag = std::abs(_muip[_qp]*_grad_potential[_qp].size());
-  // _Pe = _vd_mag*_current_elem->hmax()/_diffip[_qp];
-  // _alpha = std::min(1.0,_Pe/6.0);
-  // _delta = _alpha*_vd_mag*_current_elem->hmax()/2.0;
-  _actual_mean_en = std::exp(_mean_en[_qp]-_em[_qp]);
-
-  if (_use_interp_for_townsend)
-    _iz = _alpha_iz[_qp];
-  else
-    _iz = _iz_coeff_energy_a[_qp]*std::pow(_actual_mean_en,_iz_coeff_energy_b[_qp])*std::exp(-_iz_coeff_energy_c[_qp]/_actual_mean_en);
+  Real _electron_flux_mag = (-_muem[_qp]*-_grad_potential[_qp]*std::exp(_em[_qp])-_diffem[_qp]*std::exp(_em[_qp])*_grad_em[_qp]).size();
+  Real _iz_term = _alpha_iz[_qp] * _electron_flux_mag;
 
-  if ( _townsend ) {
-    _electron_flux_mag = (-_muem[_qp]*-_grad_potential[_qp]*std::exp(_em[_qp])-_diffem[_qp]*std::exp(_em[_qp])*_grad_em[_qp]).size();
-    _source_term = _iz * _electron_flux_mag;
-  }
-  else
-    _source_term = _iz * _Ar[_qp] * std::exp(_em[_qp]);
- 
   return -_grad_test[_i][_qp]*std::exp(_u[_qp])*(_muip[_qp]*-_grad_potential[_qp]-_diffip[_qp]*_grad_u[_qp])
-    -_test[_i][_qp]*_source_term // Ionization term
+    -_test[_i][_qp]*_iz_term // Ionization term
     -_test[_i][_qp]*_N_A[_qp]*std::exp(-_u[_qp]); // Source stabilization
     // -_grad_test[_i][_qp]*(-_delta*std::exp(_u[_qp])*_grad_u[_qp]); // Diffusion stabilization
 }
@@ -103,10 +90,6 @@ IonBolosKernelEnergyForm::computeQpResidual()
 Real
 IonBolosKernelEnergyForm::computeQpJacobian()
 {
-  // _vd_mag = std::abs(_muip[_qp]*_grad_potential[_qp].size());
-  // _Pe = _vd_mag*_current_elem->hmax()/_diffip[_qp];
-  // _alpha = std::min(1.0,_Pe/6.0);
-  // _delta = _alpha*_vd_mag*_current_elem->hmax()/2.0;
 
   return -_grad_test[_i][_qp]*(_muip[_qp]*-_grad_potential[_qp]*std::exp(_u[_qp])*_phi[_j][_qp]-_diffip[_qp]*(std::exp(_u[_qp])*_grad_phi[_j][_qp]+std::exp(_u[_qp])*_phi[_j][_qp]*_grad_u[_qp]))
     -_test[_i][_qp]*_N_A[_qp]*std::exp(-_u[_qp])*-1.0*_phi[_j][_qp]; // Source stabilization
@@ -116,49 +99,37 @@ IonBolosKernelEnergyForm::computeQpJacobian()
 Real
 IonBolosKernelEnergyForm::computeQpOffDiagJacobian(unsigned int jvar)
 {
-  _actual_mean_en = std::exp(_mean_en[_qp]-_em[_qp]);
-
-  if (_use_interp_for_townsend) {
-    _iz = _alpha_iz[_qp];
-    _d_iz_d_actual_mean_en_member = _d_iz_d_actual_mean_en[_qp];
-  }
-  else {
-    _iz = _iz_coeff_energy_a[_qp]*std::pow(_actual_mean_en,_iz_coeff_energy_b[_qp])*std::exp(-_iz_coeff_energy_c[_qp]/_actual_mean_en);
-    _d_iz_d_actual_mean_en_member = std::pow(_actual_mean_en,_iz_coeff_energy_b[_qp]-2.0)*_iz_coeff_energy_a[_qp]*(_actual_mean_en*_iz_coeff_energy_b[_qp] + _iz_coeff_energy_c[_qp])*std::exp(-_iz_coeff_energy_c[_qp]/_actual_mean_en);
-  }
-
-  _d_actual_mean_en_d_em = -std::exp(_mean_en[_qp]-_em[_qp])*_phi[_j][_qp];
-  _d_actual_mean_en_d_mean_en = std::exp(_mean_en[_qp]-_em[_qp])*_phi[_j][_qp];
-  _d_iz_d_em = _d_iz_d_actual_mean_en_member * _d_actual_mean_en_d_em;
-  _d_iz_d_mean_en = _d_iz_d_actual_mean_en_member * _d_actual_mean_en_d_mean_en;
-
-  if ( _townsend ) {
-    _electron_flux = -_muem[_qp]*-_grad_potential[_qp]*std::exp(_em[_qp])-_diffem[_qp]*std::exp(_em[_qp])*_grad_em[_qp];
-    _d_electron_flux_d_potential = -_muem[_qp]*-_grad_phi[_j][_qp]*std::exp(_em[_qp]);
-    _d_electron_flux_d_em = -_muem[_qp]*-_grad_potential[_qp]*std::exp(_em[_qp])*_phi[_j][_qp]-_diffem[_qp]*(std::exp(_em[_qp])*_phi[_j][_qp]*_grad_em[_qp]+std::exp(_em[_qp])*_grad_phi[_j][_qp]);
-    _electron_flux_mag = _electron_flux.size();
-    _d_electron_flux_mag_d_potential = _electron_flux*_d_electron_flux_d_potential/(_electron_flux_mag+std::numeric_limits<double>::epsilon());
-    _d_electron_flux_mag_d_em = _electron_flux*_d_electron_flux_d_em/(_electron_flux_mag+std::numeric_limits<double>::epsilon());
-
-    _d_source_term_d_em = _iz * _d_electron_flux_mag_d_em + _electron_flux_mag * _d_iz_d_em;
-    _d_source_term_d_mean_en = _electron_flux_mag * _d_iz_d_mean_en;
-    _d_source_term_d_potential = _iz * _d_electron_flux_mag_d_potential;
-  }
-
-  else {
-    _d_source_term_d_em = std::exp(_em[_qp]) * _Ar[_qp] * _d_iz_d_em + _iz * _Ar[_qp] * std::exp(_em[_qp]) * _phi[_j][_qp];
-    _d_source_term_d_mean_en = std::exp(_em[_qp]) * _Ar[_qp] * _d_iz_d_mean_en;
-    _d_source_term_d_potential = 0.0;
-  }
- 
+  Real _actual_mean_en = std::exp(_mean_en[_qp]-_em[_qp]);
+  Real _d_actual_mean_en_d_mean_en = std::exp(_mean_en[_qp]-_em[_qp])*_phi[_j][_qp];
+  Real _d_iz_d_mean_en = _d_iz_d_actual_mean_en[_qp] * _d_actual_mean_en_d_mean_en;
+  Real _d_muem_d_mean_en = _d_muem_d_actual_mean_en[_qp] * _d_actual_mean_en_d_mean_en;
+  Real _d_diffem_d_mean_en = _d_diffem_d_actual_mean_en[_qp] * _d_actual_mean_en_d_mean_en;
+  Real _d_actual_mean_en_d_em = -std::exp(_mean_en[_qp]-_em[_qp])*_phi[_j][_qp];
+  Real _d_iz_d_em = _d_iz_d_actual_mean_en[_qp] * _d_actual_mean_en_d_em;
+  Real _d_muem_d_em = _d_muem_d_actual_mean_en[_qp] * _d_actual_mean_en_d_em;
+  Real _d_diffem_d_em = _d_diffem_d_actual_mean_en[_qp] * _d_actual_mean_en_d_em;
+
+  RealVectorValue _electron_flux = -_muem[_qp]*-_grad_potential[_qp]*std::exp(_em[_qp])-_diffem[_qp]*std::exp(_em[_qp])*_grad_em[_qp];
+  RealVectorValue _d_electron_flux_d_potential = -_muem[_qp]*-_grad_phi[_j][_qp]*std::exp(_em[_qp]);
+  RealVectorValue _d_electron_flux_d_mean_en = -_d_muem_d_mean_en*-_grad_potential[_qp]*std::exp(_em[_qp])-_d_diffem_d_mean_en*std::exp(_em[_qp])*_grad_em[_qp];
+  RealVectorValue _d_electron_flux_d_em = -_d_muem_d_em*-_grad_potential[_qp]*std::exp(_em[_qp])-_muem[_qp]*-_grad_potential[_qp]*std::exp(_em[_qp])*_phi[_j][_qp]-_d_diffem_d_em*std::exp(_em[_qp])*_grad_em[_qp]-_diffem[_qp]*std::exp(_em[_qp])*_phi[_j][_qp]*_grad_em[_qp]-_diffem[_qp]*std::exp(_em[_qp])*_grad_phi[_j][_qp];
+  Real _electron_flux_mag = _electron_flux.size();
+  Real _d_electron_flux_mag_d_potential = _electron_flux*_d_electron_flux_d_potential/(_electron_flux_mag+std::numeric_limits<double>::epsilon());
+  Real _d_electron_flux_mag_d_mean_en = _electron_flux*_d_electron_flux_d_mean_en/(_electron_flux_mag+std::numeric_limits<double>::epsilon());
+  Real _d_electron_flux_mag_d_em = _electron_flux*_d_electron_flux_d_em/(_electron_flux_mag+std::numeric_limits<double>::epsilon());
+
+  Real _d_iz_term_d_potential = (_alpha_iz[_qp] * _d_electron_flux_mag_d_potential);
+  Real _d_iz_term_d_mean_en = (_electron_flux_mag * _d_iz_d_mean_en + _alpha_iz[_qp] * _d_electron_flux_mag_d_mean_en);
+  Real _d_iz_term_d_em = (_electron_flux_mag * _d_iz_d_em + _alpha_iz[_qp] * _d_electron_flux_mag_d_em);
+
   if (jvar == _potential_id)
-    return -_grad_test[_i][_qp]*(_muip[_qp]*-_grad_phi[_j][_qp]*std::exp(_u[_qp])) - _test[_i][_qp] * _d_source_term_d_potential;
+    return -_grad_test[_i][_qp]*(_muip[_qp]*-_grad_phi[_j][_qp]*std::exp(_u[_qp])) - _test[_i][_qp] * _d_iz_term_d_potential;
 
   else if (jvar == _em_id)
-    return -_test[_i][_qp] * _d_source_term_d_em; // Ionization term
+    return -_test[_i][_qp] * _d_iz_term_d_em; // Ionization term
 
   else if (jvar == _mean_en_id)
-    return -_test[_i][_qp] * _d_source_term_d_mean_en; // Ionization term
+    return -_test[_i][_qp] * _d_iz_term_d_mean_en; // Ionization term
 
   else
     return 0.0;
